
Original Fletcher's hash function:

            const uint16_t* data;  /* Pointer to the data to be summed */
            size_t len;            /* Length in 16-bit words */
            uint32_t sum1 = 0xffff, sum2 = 0xffff;

            while (len)
            {
                unsigned tlen = len > 360 ? 360 : len;
                len -= tlen;
                do
                {
                    sum1 += *data++;
                    sum2 += sum1;
                } while (--tlen);
                sum1 = (sum1 & 0xffff) + (sum1 >> 16);
                sum2 = (sum2 & 0xffff) + (sum2 >> 16);
            }

            /* Second reduction step to reduce sums to 16 bits */
            sum1 = (sum1 & 0xffff) + (sum1 >> 16);
            sum2 = (sum2 & 0xffff) + (sum2 >> 16);

            return (sum2 << 16) | sum1;


Hash function used for filename matching: XXX TODO the 6502 version works slightly different because of removing clc's

            const char* data;  /* Pointer to the data to be summed */
            size_t len;        /* Length in chars */
            uint16_t sum1 = 0x00ff, sum2 = 0x00ff;

            do
            {
                sum1 += *data++;
                sum2 += sum1;
            } while (--len);

            sum1 = (sum1 & 0xff) + (sum1 >> 8);
            sum2 = (sum2 & 0xff) + (sum2 >> 8);

            return ((sum2 & $ff) << 8) | (sum1 & 0xff);
