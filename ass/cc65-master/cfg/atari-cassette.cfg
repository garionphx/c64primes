FEATURES {
    STARTADDRESS: default = $0900;
}
SYMBOLS {
    __STACKSIZE__:       type = weak,   value = $0800; # 2k stack
    __RESERVED_MEMORY__: type = weak,   value = $0000;
    __STARTADDRESS__:    type = export, value = %S;
    _cas_hdr:            type = import;
}
MEMORY {
    ZP:            file = "", define = yes, start = $0082, size = $007E;
    RAM:           file = %O, define = yes, start = %S,    size = $BC20 - __STACKSIZE__ - __RESERVED_MEMORY__ - %S;
}
SEGMENTS {
    CASHDR:    load = RAM, type = ro;
    STARTUP:   load = RAM, type = ro,  define = yes, optional = yes;
    LOWCODE:   load = RAM, type = ro,  define = yes, optional = yes;
    INIT:      load = RAM, type = ro,                optional = yes;
    CODE:      load = RAM, type = ro,  define = yes;
    RODATA:    load = RAM, type = ro,                optional = yes;
    DATA:      load = RAM, type = rw,                optional = yes;
    BSS:       load = RAM, type = bss, define = yes, optional = yes;
    ZEROPAGE:  load = ZP,  type = zp,                optional = yes;
    EXTZP:     load = ZP,  type = zp,                optional = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = INIT;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
